module("framework.network.socket.pre.AliveCheckPreReceiver", package.seeall)

slot0 = class("AliveCheckPreReceiver", BasePreReceiver)

function slot0.ctor(slot0, slot1)
	uv0.super.ctor(slot0)

	slot0._aliveCheckPreSender = slot1
	slot0._currDownTag = nil
	slot0._currRespName = "nil"
end

function slot0.getCurrDownTag(slot0)
	return slot0._currDownTag
end

function slot0.clearCurrDownTag(slot0)
	slot0._currDownTag = nil
end

function slot0.preReceiveMsg(slot0, slot1, slot2, slot3, slot4, slot5, slot6)
	if slot5 and slot5 ~= 255 then
		if slot0._currDownTag then
			slot3 = slot3 or "nil"

			if slot0._currDownTag == slot5 then
				if slot0._currRespName == slot3 then
					logError(string.format("downTag重复: tag=%d name=%s", slot5, slot3))
				else
					logError(string.format("downTag一样，协议不一样: tag=%d %s->%s", slot5, slot0._currRespName, slot3))
				end

				return true
			elseif slot0._currDownTag == 0 and slot5 ~= 1 or slot0._currDownTag ~= 127 and slot5 == 0 or slot0._currDownTag > 0 and slot5 > 0 and slot5 - slot0._currDownTag > 1 then
				logError(string.format("downTag跳跃: tag=%d->%d %s->%s", slot0._currDownTag, slot5, slot0._currRespName, slot3))
				ConnectAliveMgr.instance:lostMessage()

				return
			end
		end

		slot0._currRespName = slot3 or "nil"
		slot0._currDownTag = slot5
	end

	slot0._aliveCheckPreSender:onReceiveMsg(slot2)
end

return slot0
