module("framework.network.socket.SystemLoginRpc", package.seeall)

slot0 = class("SystemLoginRpc", BaseRpc)

function slot0.sendLoginRequest(slot0, slot1, slot2, slot3, slot4, slot5)
	slot6 = {
		account = slot1,
		password = slot2,
		connectWay = slot3
	}

	logNormal("请求系统登录: " .. cjson.encode(slot6))

	return slot0:sendSysMsg(1, slot6, slot4, slot5)
end

function slot0.onReceiveLoginResponse(slot0, slot1, slot2)
	if slot1 == 0 then
		logNormal("登录成功！ login succ, userId = " .. slot2.userId)
	else
		logNormal("登录失败！ login fail: " .. slot2.reason)
	end

	LuaSocketMgr.instance:setSeqId(0)
end

function slot0.sendGetLostCmdRespRequest(slot0, slot1, slot2, slot3)
	return slot0:sendSysMsg(3, {
		downTag = slot1 or 0
	}, slot2, slot3)
end

function slot0.onReceiveGetLostCmdRespResponse(slot0, slot1, slot2)
	logNormal("请求补包结束，是否真的有补发协议：canGet = " .. (slot2.canGet and "true" or "false"))
end

function slot0.onReceiveForceLogoutResponse(slot0, slot1, slot2)
	logNormal(string.format("<color=red>被系统强踢下线 reason = %s resultCode = %d</color>", slot2.reason or "nil", slot1))
	ConnectAliveMgr.instance:dispatchEvent(ConnectEvent.OnServerKickedOut, slot2.reason, slot1)
end

function slot0.onReceiveGetLostCmdRespResponseStartTag(slot0, slot1, slot2)
	logNormal("服务端开始补发重连期间错过的业务协议！！！")
end

slot0.instance = slot0.New()

return slot0
