module("framework.mvc.model.TreeScrollModel", package.seeall)

slot0 = class("TreeScrollModel", BaseModel)

function slot0.ctor(slot0)
	slot0._stopUpdate = false
	slot0._scrollViews = {}
	slot0._moList = {}
end

function slot0.reInitInternal(slot0)
	uv0.super.reInitInternal(slot0)

	for slot4, slot5 in ipairs(slot0._scrollViews) do
		if slot5.clear then
			slot5:clear()
		end
	end
end

function slot0.clear(slot0)
	slot0._stopUpdate = false
	slot0._moList = {}

	slot0:onModelUpdate()
end

function slot0.getInfoList(slot0)
	slot1 = {}

	for slot6 = 1, slot0:getRootCount() do
		if ({
			rootType = slot0._moList[slot6].treeRootParam.rootType or 0,
			rootIndex = slot6 - 1,
			rootLength = slot8.rootLength or 0,
			nodeType = slot8.nodeType or 0,
			nodeLength = slot8.nodeLength or 0,
			nodeStartSpace = slot8.nodeStartSpace or 0,
			nodeEndSpace = slot8.nodeEndSpace or 0,
			nodeCountEachLine = slot8.nodeCountEachLine or 0,
			isExpanded = slot8.isExpanded or false,
			nodeCount = slot0:getNodeCount(slot6)
		}).nodeCountEachLine <= 0 then
			slot7.nodeCountEachLine = 1
		end

		slot1[slot6] = slot7
	end

	return slot1
end

function slot0.getRootCount(slot0)
	return #slot0._moList
end

function slot0.getNodeCount(slot0, slot1)
	return #slot0._moList[slot1].children
end

function slot0.getByIndex(slot0, slot1, slot2)
	if slot2 == 0 then
		return slot0._moList[slot1].mo
	else
		return slot0._moList[slot1].children[slot2]
	end
end

function slot0.addRoot(slot0, slot1, slot2, slot3)
	slot4 = #slot0._moList

	if not slot3 or slot3 > slot4 + 1 then
		slot3 = slot4 + 1
	elseif slot3 < 1 then
		slot3 = 1
	end

	table.insert(slot0._moList, slot3, {
		mo = slot1,
		treeRootParam = slot2,
		children = {}
	})
	slot0:onModelUpdate()
end

function slot0.addNode(slot0, slot1, slot2, slot3)
	slot5 = #slot0._moList[slot2].children

	if not slot3 or slot3 > slot5 + 1 then
		slot3 = slot5 + 1
	elseif slot3 < 1 then
		slot3 = 1
	end

	table.insert(slot4, slot3, slot1)

	slot0._moList[slot2].children = slot4

	slot0:onModelUpdate()
end

function slot0.removeRoot(slot0, slot1)
	if not slot1 or slot1 < 1 then
		return nil
	end

	if slot1 > #slot0._moList then
		return nil
	end

	slot0:onModelUpdate()

	return table.remove(slot0._moList, slot1).mo
end

function slot0.removeNode(slot0, slot1, slot2)
	if not slot1 or slot1 < 1 then
		return nil
	end

	if slot1 > #slot0._moList then
		return nil
	end

	slot0:onModelUpdate()

	return table.remove(slot0._moList[slot1].children, slot2)
end

function slot0.stopUpdate(slot0)
	slot0._stopUpdate = true
end

function slot0.resumeUpdate(slot0)
	slot0._stopUpdate = false

	slot0:onModelUpdate()
end

function slot0.onModelUpdate(slot0)
	if slot0._stopUpdate then
		return
	end

	for slot4, slot5 in ipairs(slot0._scrollViews) do
		slot5:onModelUpdate()
	end
end

function slot0.addScrollView(slot0, slot1)
	table.insert(slot0._scrollViews, slot1)
end

function slot0.removeScrollView(slot0, slot1)
	tabletool.removeValue(slot0._scrollViews, slot1)
end

return slot0
