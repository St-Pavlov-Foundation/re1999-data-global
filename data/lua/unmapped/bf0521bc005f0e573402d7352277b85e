module("framework.mvc.view.scroll.BaseScrollView", package.seeall)

slot0 = class("BaseScrollView", BaseView)

function slot0.ctor(slot0, slot1, slot2)
	slot0._model = slot1
	slot0._emptyParam = slot2
	slot0._isShowing = false
	slot0._needRefresh = true
	slot0._emptyGO = nil
	slot0._emptyHandler = nil
end

function slot0.onInitView(slot0)
	if slot0._model then
		slot0._model:addScrollView(slot0)
	end

	if slot0._emptyParam then
		if slot0._emptyParam.prefabType == ScrollEnum.ScrollPrefabFromView then
			slot0._emptyGO = gohelper.findChild(slot0.viewGO, slot0._emptyParam.prefabUrl)
		else
			if not gohelper.findChild(slot0.viewGO, slot0._emptyParam.parentPath) then
				logError("empty go parent cannot find: " .. slot0._emptyParam.parentPath)
			end

			slot0._emptyGO = slot0:getResInst(slot0._emptyParam.prefabUrl, slot1)

			if not slot0._emptyGO then
				logError("empty res cannot find: " .. slot0._emptyParam.prefabUrl)
			end
		end

		slot0._emptyHandler = slot0._emptyParam.handleClass.New()

		if not slot0._emptyHandler then
			logError("empty handler cannot find: " .. (slot0._emptyParam.handleClass and slot0._emptyParam.handleClass.__cname or slot0.viewContainer.viewName))
		end
	end

	if slot0._param and slot0._param.scrollGOPath and GameResMgr.IsFromEditorDir then
		gohelper.setSibling(gohelper.create2d(gohelper.findChild(slot0.viewGO, slot0._param.scrollGOPath), slot0._param.prefabUrl), 0)
	end
end

function slot0.onOpen(slot0)
	slot0._isShowing = true

	if slot0._needRefresh then
		slot0:refreshScroll()
	end
end

function slot0.onCloseFinish(slot0)
	slot0._isShowing = false
end

function slot0.onDestroyView(slot0)
	if slot0._model then
		slot0._model:removeScrollView(slot0)

		slot0._model = nil
	end

	if slot0._emptyGO then
		gohelper.destroy(slot0._emptyGO)

		slot0._emptyGO = nil
		slot0._emptyParam = nil
		slot0._emptyHandler = nil
	end
end

function slot0.onModelUpdate(slot0)
	if slot0._isShowing then
		slot0:refreshScroll()
	else
		slot0._needRefresh = true
	end
end

function slot0.refreshScroll(slot0)
	slot0._needRefresh = false
end

function slot0.updateEmptyGO(slot0, slot1)
	if slot0._emptyGO then
		gohelper.setActive(slot0._emptyGO, slot1 <= 0)

		if slot1 <= 0 then
			slot0._emptyHandler:refreshEmptyView(slot0._emptyGO, slot0._emptyParam.params)
		end
	end
end

return slot0
