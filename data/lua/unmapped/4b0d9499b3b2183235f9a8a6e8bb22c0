module("framework.mvc.BaseRpc", package.seeall)

slot0 = class("BaseRpc")

function slot0.onInit(slot0)
end

function slot0.reInit(slot0)
end

function slot0.onInitInternal(slot0)
	slot0._callbackId = 0
	slot0._cmdCallbackTab = {}

	slot0:onInit()
end

function slot0.reInitInternal(slot0)
	slot0._callbackId = 0
	slot0._cmdCallbackTab = {}

	slot0:reInit()
end

function slot0.sendSysMsg(slot0, slot1, slot2, slot3, slot4, slot5)
	if LuaSocketMgr.instance:isConnected(slot5) then
		LuaSocketMgr.instance:sendSysMsg(slot1, slot2, slot5)

		return slot0:addCallback(slot1, slot3, slot4)
	else
		logWarn("send system cmd_" .. slot1 .. " fail, reason: lost connect")
	end
end

function slot0.sendMsg(slot0, slot1, slot2, slot3, slot4)
	if LuaSocketMgr.instance:isConnected(slot4) and ConnectAliveMgr.instance:isConnected() then
		LuaSocketMgr.instance:sendMsg(slot1, slot4)

		return slot0:addCallback(LuaSocketMgr.instance:getCmdByPbStructName(slot1.__cname), slot2, slot3)
	else
		logWarn("send protobuf cmd_" .. slot5 .. " fail, reason: lost connect")
		ConnectAliveMgr.instance:addUnresponsiveMsg(slot5, slot1, slot4)

		return slot0:addCallback(slot5, slot2, slot3)
	end
end

function slot0.addCallback(slot0, slot1, slot2, slot3)
	if slot2 then
		slot0._callbackId = slot0._callbackId + 1

		if not slot0._cmdCallbackTab[slot1] then
			slot0._cmdCallbackTab[slot1] = {}
		end

		slot5 = LuaGeneralCallback.getPool():getObject()
		slot5.callback = slot2

		slot5:setCbObj(slot3)

		slot5.id = slot0._callbackId

		table.insert(slot4, slot5)

		return slot5.id
	end
end

function slot0.removeCallbackByCmd(slot0, slot1)
	if not slot0._cmdCallbackTab[slot1] then
		return
	end

	slot0._cmdCallbackTab[slot1] = nil

	for slot6, slot7 in ipairs(slot2) do
		LuaGeneralCallback.getPool():putObject(slot7)
	end
end

function slot0.removeCallbackById(slot0, slot1)
	for slot5, slot6 in pairs(slot0._cmdCallbackTab) do
		if slot6 then
			for slot11 = #slot6, 1, -1 do
				if slot1 == slot6[slot11].id then
					LuaGeneralCallback.getPool():putObject(slot6[slot11])
					table.remove(slot6, slot11)

					return
				end
			end
		end
	end
end

function slot0.onReceiveMsg(slot0, slot1, slot2, slot3, slot4, slot5, slot6)
	if slot0["onReceive" .. slot3] then
		slot7(slot0, slot1, slot4)
	else
		logError(string.format("cmd_%d onReceive%s = nil, %s", slot2, slot3, slot0.__cname))
	end

	if not slot0._cmdCallbackTab then
		logError(string.format("cmd callbackDict = nil, %s => module_mvc.lua ", slot0.__cname))

		return
	end

	if slot0._cmdCallbackTab[slot2] then
		slot0._cmdCallbackTab[slot2] = nil

		for slot12, slot13 in ipairs(slot8) do
			slot13:invoke(slot2, slot1, slot4)
			LuaGeneralCallback.getPool():putObject(slot13)
		end
	end
end

return slot0
