slot1 = {}

return {
	DungeonView = function (slot0)
		table.insert(slot0, "ui/spriteassets/dungeon.asset")
		table.insert(slot0, "singlebg/dungeon/full/bg1.png")
	end,
	DungeonMapView = function (slot0)
		DungeonModel.instance.jumpEpisodeId = nil
	end,
	VersionActivityDungeonMapView = function (slot0)
		DungeonModel.instance.jumpEpisodeId = nil
	end,
	SeasonMainView = function (slot0)
	end,
	DungeonViewPreload = function (slot0)
		slot1 = {}

		table.insert(slot1, "ui/viewres/dungeon/dungeonview.prefab")
		uv0._startLoad(slot1, slot0)
	end,
	WeekWalkLayerViewPreload = function (slot0)
		slot3, slot4 = WeekWalkModel.instance:getInfo():getNotFinishedMap()

		if slot3.id <= 105 then
			table.insert(uv0._getResPathList(ViewName.WeekWalkLayerView), ResUrl.getWeekWalkLayerIcon("full/bg_choose_shallow_1"))
		elseif slot3.id <= 205 then
			table.insert(slot1, ResUrl.getWeekWalkLayerIcon("full/bg_choose_shallow_2"))
		else
			table.insert(slot1, ResUrl.getWeekWalkLayerIcon("full/bg_choose_deep"))
		end

		uv0._startLoad(slot1, slot0)
	end,
	StoreViewPreload = function (slot0)
		slot1 = {}

		table.insert(slot1, module_views.StoreView.mainRes)
		uv0._startLoad(slot1, slot0)
	end,
	TaskView = function (slot0)
		for slot4, slot5 in pairs(module_views.TaskView.tabRes[2]) do
			table.insert(slot0, slot5[1])
		end
	end,
	DungeonViewGold = function (slot0)
		slot1 = {}

		table.insert(slot1, "singlebg/dungeon/full/bg123.png")
		uv0._startLoad(slot1, slot0)
	end,
	DungeonViewBreak = function (slot0)
		slot1 = {}

		table.insert(slot1, "singlebg/dungeon/full/bg123.png")
		uv0._startLoad(slot1, slot0)
	end,
	DungeonViewWeekWalk = function (slot0)
		slot1 = {}

		table.insert(slot1, "ui/viewres/dungeon/dungeonweekwalkview.prefab")
		uv0._startLoad(slot1, slot0)
	end,
	DungeonViewExplore = function (slot0)
		slot1 = {}

		table.insert(slot1, DungeonEnum.dungeonexploreviewPath)
		uv0._startLoad(slot1, slot0)
	end,
	ExploreArchivesView = function (slot0)
		slot1 = 1401

		if ViewMgr.instance:getContainer(ViewName.ExploreArchivesView) and slot2.viewParam then
			slot1 = slot2.viewParam.id
		end

		table.insert(slot0, string.format("ui/viewres/explore/explorearchivechapter%d.prefab", slot1))
	end,
	preloadMultiView = function (slot0, slot1, slot2, slot3)
		slot4 = {}

		for slot8, slot9 in ipairs(slot2) do
			for slot14, slot15 in ipairs(uv0._getResPathList(slot9)) do
				table.insert(slot4, slot15)
			end
		end

		if slot3 then
			for slot8, slot9 in ipairs(slot3) do
				table.insert(slot4, slot9)
			end
		end

		uv0._startLoad(slot4, slot0, slot1)
	end,
	DungeonChapterAndLevelView = function (slot0, slot1, slot2)
		for slot8, slot9 in ipairs(uv0._getResPathList(ViewName.DungeonMapView)) do
			table.insert({}, slot9)
		end

		if slot2 then
			for slot9, slot10 in ipairs(uv0._getResPathList(slot2)) do
				table.insert(slot3, slot10)
			end
		end

		uv0._startLoad(slot3, slot0)
	end,
	CharacterDataVoiceView = function (slot0)
		slot1 = {}

		table.insert(slot1, ResUrl.getCharacterDataIcon("full/bg_di_004.png"))
		table.insert(slot1, "ui/viewres/character/characterdata/characterdatavoiceview.prefab")
		uv0._startLoad(slot1, slot0)
	end,
	CharacterDataItemView = function (slot0)
		slot1 = {}

		table.insert(slot1, ResUrl.getCharacterDataIcon("full/bg_tingyongdi_006.png"))
		table.insert(slot1, "ui/viewres/character/characterdata/characterdataitemview.prefab")
		uv0._startLoad(slot1, slot0)
	end,
	CharacterDataCultureView = function (slot0)
		slot1 = {}

		table.insert(slot1, ResUrl.getCharacterDataIcon("full/bg_di_004.png"))
		table.insert(slot1, "ui/viewres/character/characterdata/characterdatacultureview.prefab")
		uv0._startLoad(slot1, slot0)
	end,
	CharacterBackpackView = function (slot0)
		table.insert(slot0, "ui/viewres/common/item/commonheroitemnew.prefab")
	end,
	FightLoadingView = function (slot0)
		slot1 = {}

		table.insert(slot1, "ui/viewres/fight/fightloadingview.prefab")
		uv0._startLoad(slot1, slot0)
	end,
	BpViewPreLoad = function (slot0)
		slot1 = {}

		if BpModel.instance.firstShow then
			table.insert(slot1, "ui/viewres/battlepass/bpvideoview.prefab")
		end

		uv0._startLoad(slot1, slot0)
	end,
	BpView = function (slot0)
		if BpConfig.instance:getBpCO(BpModel.instance.id) and slot1.isSp and ViewMgr.instance:getSetting(ViewName.BpSPView) then
			if slot2.mainRes then
				table.insert(slot0, slot2.mainRes)
			end

			if slot2.otherRes then
				for slot6, slot7 in pairs(slot2.otherRes) do
					table.insert(slot0, slot7)
				end
			end
		end
	end,
	BpSPView = function (slot0)
		if ViewMgr.instance:getSetting(ViewName.BpView) then
			if slot1.mainRes then
				table.insert(slot0, slot1.mainRes)
			end

			if slot1.otherRes then
				for slot5, slot6 in pairs(slot1.otherRes) do
					table.insert(slot0, slot6)
				end
			end
		end
	end,
	SummonADView = function (slot0)
		if #SummonMainController.instance:getCurPoolPreloadRes() > 0 then
			for slot5, slot6 in ipairs(slot1) do
				table.insert(slot0, slot6)
			end
		end
	end,
	EliminateLevelView = function (slot0)
		if #EliminateLevelController.instance:getCurLevelNeedPreloadRes() > 0 then
			for slot5, slot6 in ipairs(slot1) do
				table.insert(slot0, slot6)
			end
		end
	end,
	V1a4_BossRushLevelDetail = function (slot0)
		if not (ViewMgr.instance:getContainer(ViewName.V1a4_BossRushLevelDetail) and slot1.viewParam) then
			return
		end

		for slot8, slot9 in ipairs(BossRushConfig.instance:getMonsterResPathList(slot2.stage)) do
			table.insert(slot0, slot9)
		end

		table.insert(slot0, BossRushConfig.instance:getBossRushLevelDetailFullBgSimage(slot3))
	end,
	OptionalChargeView = function (slot0)
		uv0._startLoad({
			"ui/viewres/store/optionalgiftview.prefab"
		}, slot0)
	end,
	Season166MainView = function (slot0)
		if Season166Config.instance:getSeasonConstStr(Season166Model.instance:getCurSeasonId(), Season166Enum.MainSceneUrl) then
			table.insert(slot0, slot2)
		end
	end,
	_startLoad = function (slot0, slot1, slot2)
		slot3 = MultiAbLoader.New()
		uv0[slot3] = true

		UIBlockMgr.instance:startBlock("ui_preload")
		slot3:setPathList(slot0)
		slot3:startLoad(function ()
			uv0[uv1] = nil

			UIBlockMgr.instance:endBlock("ui_preload")
			uv1:dispose()
			uv2(uv3)
		end)
	end,
	stopPreload = function ()
		for slot3, slot4 in pairs(uv0) do
			slot3:dispose()
			logNormal("module_views_preloader dispose loader")
		end

		uv0 = {}
	end,
	_getResPathList = function (slot0)
		if ViewMgr.instance:getSetting(slot0).mainRes then
			table.insert({}, slot2.mainRes)
		end

		if slot2.otherRes then
			for slot6, slot7 in pairs(slot2.otherRes) do
				table.insert(slot1, slot7)
			end
		end

		if slot2.tabRes then
			for slot6, slot7 in pairs(slot2.tabRes) do
				for slot11, slot12 in pairs(slot7) do
					for slot16, slot17 in pairs(slot12) do
						table.insert(slot1, slot17)
					end
				end
			end
		end

		if slot2.anim and slot2.anim ~= ViewAnim.Default and string.find(slot2.anim, ".controller") then
			table.insert(slot1, slot2.anim)
		end

		return slot1
	end,
	VersionActivityEnterView = function (slot0)
		if not ViewMgr.instance:getContainer(ViewName.VersionActivityEnterView) then
			return
		end

		for slot6, slot7 in ipairs(slot1:getPreLoaderResPathList()) do
			table.insert(slot0, slot7)
		end
	end
}
