module("framework.luamono.MonoHelper", package.seeall)

return {
	addLuaComOnceToGo = function (slot0, slot1, slot2)
		if gohelper.isNil(slot0) then
			logError("MonoHelper.addLuaComOnceToGo, go can not be nil!")

			return nil
		end

		if not slot1 then
			logError("MonoHelper.addLuaComOnceToGo, clsDefine can not be nil!")

			return nil
		end

		return SLFramework.LuaMonoTools.GetLuaComContainer(slot0, LuaMonoContainer):addCompOnce(slot1, slot2)
	end,
	addNoUpdateLuaComOnceToGo = function (slot0, slot1, slot2)
		if gohelper.isNil(slot0) then
			logError("MonoHelper.addNoUpdateLuaComOnceToGo, go can not be nil!")

			return nil
		end

		if not slot1 then
			logError("MonoHelper.addNoUpdateLuaComOnceToGo, clsDefine can not be nil!")

			return nil
		end

		return SLFramework.LuaMonoTools.GetLuaComContainer(slot0, LuaNoUpdateMonoContainer):addCompOnce(slot1, slot2)
	end,
	getLuaComFromGo = function (slot0, slot1)
		if gohelper.isNil(slot0) or not slot1 then
			logError("MonoHelper.getLuaComFromGo, go and clsDefine can not be nil! ")

			return nil
		end

		if SLFramework.LuaMonoTools.FindLuaComContainer(slot0) ~= nil then
			return slot2:getComp(slot1)
		end

		return nil
	end,
	removeLuaComFromGo = function (slot0, slot1)
		if gohelper.isNil(slot0) or not slot1 then
			logError("MonoHelper.removeLuaComFromGo, go and clsDefine can not be nil! ")

			return nil
		end

		if SLFramework.LuaMonoTools.FindLuaComContainer(slot0) ~= nil then
			slot2:removeCompByDefine(slot1)
		end
	end,
	getLuaContainerInGo = function (slot0)
		if gohelper.isNil(slot0) then
			logError("MonoHelper.getLuaContainerInGo, go can not be nil!")

			return nil
		end

		return SLFramework.LuaMonoTools.FindLuaComContainer(slot0)
	end
}
